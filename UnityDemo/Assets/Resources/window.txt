//import_type 注册c#类到脚本
GameObject = import_type("UnityEngine.GameObject")
Color = import_type("UnityEngine.Color")
UICheckbox = import_type("UICheckbox")
UISprite = import_type("UISprite")
UIGrid = import_type("UIGrid")
Util = import_type("Util")
UIEventListener = import_type("UIEventListener")

//声明所有的颜色变量  c#类构造函数使用方法  Color(xx,xx,xx,xx) 不用加new关键字
colors = [Color(1,0,0,1), Color(0,1,0,1), Color(0,0,1,1), Color(1,1,0,1), Color(0,1,1,1), Color(1,0,1,1), Color(1,1,1,1), Color(0.5,0.5,0.5,1)]
//绑定在windows GameObject上的组件  通过过渡组件类ScriptComponent
window = 
{
    m_Item = null,          //Item Copy对象
    m_Grid = null,          //排布Object
    m_Sel = null,           //当前选中的Item
    registerFunction = ["Awake"],       //声明使用到的组件回调函数
    
    //初始化函数 初始化所有的Item 并设置不同颜色
    function Awake()
    {
        this.m_Grid = Util.FindChild(this.com, "Grid", UIGrid)
        this.m_Item = Util.FindChild(this.com, "Check")
        this.m_Grid.sorted = true
        Util.ClearChildren(this.m_Grid)
        for (var i=0;i<8;++i)
        {
            for (var j=0;j<2;++j)
            {
                var obj = GameObject.Instantiate(this.m_Item)
                Util.AddChild(this.m_Grid, obj)
                Util.SetActive(obj, true)
                obj.name = tostring(Util.Range(100,200))
                var com = clone(item)           //clone(脚本系统自带函数)函数表示克隆一个脚本对象
                Util.AddComponent(obj, com)
                com.Initialize(i)
            }
        }
        this.m_Grid.Reposition()
    }
    //点击Item事件
    function OnClick(i)
    {
        if (this.m_Sel == null)
        {
            this.m_Sel = i
            i.Show()
        }
        elseif (this.m_Sel.m_Index == i.m_Index)
        {
            GameObject.Destroy(this.m_Sel.com.gameObject)
            GameObject.Destroy(i.com.gameObject)
            this.m_Sel = null
        }
        else
        {
            this.m_Sel.Hide()
            this.m_Sel = i
            i.Show()
        }
    }
}
//绑定在单个Item上的组件
item = 
{
    m_Check = null,
    m_Image = null,
    m_Back = null,
    m_Index = null,
    m_Show = false,
    registerFunction = ["Awake"],
    function Awake()
    {
        this.m_Check = Util.GetComponent(this.com, UICheckbox)
        this.m_Back = Util.FindChild(this.com, "Sprite")
        this.m_Image = Util.FindChild(this.com, "Image", UISprite)
    }
    function Initialize(index)
    {
        this.m_Index = index
        this.m_Image.color = colors[index]
		UIEventListener.Get(this.com.gameObject).onClick = UIEventListener.VoidDelegate(this.OnClickSelf)
    }
    function Show()
    {
        this.m_Show = true
        Util.SetActive(this.m_Back, false)
    }
    function Hide()
    {
        this.m_Show = false
        Util.SetActive(this.m_Back, true)
    }
    function OnClickSelf()
    {
        if (this.m_Show) { return }
        window.OnClick(this)
    }
}